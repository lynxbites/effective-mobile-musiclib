{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple swagger for musiclib.",
        "title": "MusicLib",
        "contact": {},
        "version": "0.1"
    },
    "host": "localhost:8000",
    "basePath": "/api/",
    "paths": {
        "/v1/songs": {
            "get": {
                "description": "Gets song from db",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Get song",
                "parameters": [
                    {
                        "type": "string",
                        "description": "string valid",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "int \u003e 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "int \u003e 0",
                        "name": "items",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/musiclib.Song"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            },
            "post": {
                "description": "Posts song to db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Post song",
                "parameters": [
                    {
                        "description": "Song JSON Object",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "{\n\t\"group\":\"Johnny Mercer\",\n\t\"name\":\"Personality\",\n\t\"releaseDate\":\"1946-12-14\",\n\t\"text\":\"When Madam Pompadour was on a ballroom floor\n\tSaid all the gentlemen, \"Obviously\"\n\t\"The madam has the cutest personality\"\n\tAnd think of all the books about do Barry's looks\n\tWhat was it made her the toast of Paree?\n\tShe had a well-developed personality\",\n\t\"https://www.youtube.com/watch?v=c1L6ZdbL5a0\":\"rer\"\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/v1/songs/{songId}": {
            "get": {
                "description": "Gets song from db",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Get song",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/musiclib.Song"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            },
            "delete": {
                "description": "deletes song from db",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Delete song",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        }
    },
    "definitions": {
        "musiclib.Song": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "releaseDate": {
                    "$ref": "#/definitions/pgtype.Date"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "pgtype.Date": {
            "type": "object",
            "properties": {
                "infinityModifier": {
                    "$ref": "#/definitions/pgtype.InfinityModifier"
                },
                "time": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "pgtype.InfinityModifier": {
            "type": "integer",
            "enum": [
                1,
                0,
                -1
            ],
            "x-enum-varnames": [
                "Infinity",
                "Finite",
                "NegativeInfinity"
            ]
        }
    }
}